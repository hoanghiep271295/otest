/**
 * Quy tắc đặt tên
 *Cung cấp ra ngoài các hàm:
 * ClearInput(obj): Xóa các text box - được gọi từ cha
 * SetInput(obj): Thiết lập thông tin trên các ô text tương ứng - được gọi từ cha
 * ReloadData(): callback function được gán từ cha vào để cập nhật lại thông tin của cha nếu cần thiết
 */
var ProvincePopup = React.createClass({
    componentWillMount: function () {
        //Load các thông tin về danh mục các thứ khác nếu cần hiết
    },
    componentDidMount: function () {
    },
    /**
    *hàm được gọi để xóa dữ liệu trên form cho phép thêm mới; được gọi bởi component có component này (list)
    */
    ClearInput: function (obj) {
        this.refs.province_popup_parentcode.value = obj.PARENTCODE;
        //this.refs.province_popup_parentextcode.value = obj.PARENTEXT;
        this.refs.province_popup_thetype.value = obj.THETYPE;
        this.refs.txtParent.value = obj.PARENTNAME;
        this.ClearThing();//clear
    },
    /**
    *thực tế xóa trên form
    */
    ClearThing: function () {
        this.refs.province_popup_code.value = '';
        this.refs.txtCodeview.value = '';
        this.refs.txtName.value = '';
        this.refs.txtNote.value = '';
        this.refs.txtBegindate.value = '';
        this.refs.chkLock.checked = false;
        //Set status
        this.refs.province_popup_status.innerHTML = 'new';

    },
    /**
    *Hàm gán dữ liệu để sửa, được gọi bởi component cha của component này
    *para obj: thông tin về dữ liệu được thay đổi
    */
    SetInput: function (obj) {
        this.refs.province_popup_code.value = obj.CODE;
        this.refs.province_popup_parentcode.value = obj.PARENTCODE;
        this.refs.province_popup_thetype.value = obj.THETYPE;
        this.refs.txtParent.value = obj.PARENTNAME;
        this.refs.txtName.value = obj.NAME;
        this.refs.txtCodeview.value = obj.CODEVIEW;
        this.refs.txtNote.value = obj.NOTE;
        this.refs.txtBegindate.value = moment(obj.BEGINDATE).format('DD/MM/YYYY');
        this.refs.chkLock.checked = (obj.LOCK === 0);
        //Set status
        this.refs.province_popup_status.innerHTML = 'edit';
    },
    /**
    *Hiển thị, được gọi bởi component cha
    */
    Show: function () {
        $('#NewModalSQ').modal('show');
    },
    /**
    *Ẩn form hiện tại
    */
    Hide: function () {
        $('#NewModalSQ').modal('hide');
    },
    /**
    *Kiểm tra để gọi load lại cho dữ liệu từ component cha (danh sách)
    *para obj: là mã của bản ghi mới được thao tác
    */
    ReloadData: function (obj) {
        if (this.props.ReloadData === null || this.props.ReloadData === 'undefined') {
            //console.log('Call load data');
            return false;
        }
        else {
            //console.log('Call load data!!!!!!!!!!!!!');
            
            this.props.ReloadData(obj);
            return true;
        }
    },
    /**
    *gọi khi bấm nút ghi
    */
    SaveClick: function () {
        this.SaveData(true);
    },
    /**
    *gọi khi bấm nút ghi và tạo mới
    */
    SaveContinueClick: function () {
        this.SaveData(false);
    },
    /**
    *Thực tế ghi dữ liệu
    *para isClose xác định sau khi ghi xong sẽ đóng form, hay là tiếp tục tạo mới
    */
    SaveData: function (isClose) {
        //try to save data
        //        console.log("Ghi dữ liệu");
        var NAME = this.refs.txtName.value;
        var CODEVIEW = this.refs.txtCodeview.value;
        var NOTE = this.refs.txtNote.value;
        var LOCK = 0;
        if (!this.refs.chkLock.checked) {
            LOCK = 1;
        }
        var BEGINDATE = "";
        if (!!this.refs.txtBegindate.value)
          BEGINDATE = convertDate(this.refs.txtBegindate.value);
        //default
        var CODE = this.refs.province_popup_code.value;
        var PARENTCODE = this.refs.province_popup_parentcode.value;
        var THETYPE = this.refs.province_popup_thetype.value;

        var data = {
            NAME: NAME,
            CODEVIEW: CODEVIEW,
            NOTE: NOTE,
            PARENTCODE: PARENTCODE,
            LOCK: LOCK,
            CODE: CODE,
            THETYPE: THETYPE,
            BEGINDATE: BEGINDATE,
            theType: THETYPE
        }
        //console.log(data);
        //Add or edit 1 item
        $.ajax({
            url: "/Province/UpdateJson",
            type: 'POST',
            data: data,
            dataType: 'json',
            success: function (data) {
                if (data.ret >= 0) {
                    if (isClose) {
                        this.Hide();
                    }
                    else {
                        this.ClearThing();
                    }
                    this.ReloadData(data.CODE);

                }
                else {
                    bootbox.alert('Lỗi ghi dữ liệu');
                }
            }.bind(this),
            error: function (xhr, status, err) {
                console.error(this.props.url, status, err.toString());
            }.bind(this)
        });

    },
    render: function () {
        return (
<div className="modal fade" id="NewModalSQ" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div className="modal-dialog">
          <div className="box box-info popup">
              {/*Tiêu đề của form*/}
            <div className="box-header with-border">
                <button type="button" className="close ui-icon-circle-close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span className="sr-only">Close</span></button>
              <h3 className="box-title">Cập nhật Đơn vị hành chính</h3>
                <input type="hidden" id="province_popup_code" ref="province_popup_code" />{/*Lưu lại mã code của bản ghi hiện tại*/}
                <input type="hidden" id="province_popup_parentcode" ref="province_popup_parentcode" />{/*Lưu lại mã code của cha hiện tại*/}
                <input type="hidden" id="province_popup_thetype" ref="province_popup_thetype" />{/*Lưu lại type của bản ghi hiện tại*/}

            </div>
              {/*Nội dung của form*/}
        <div className="modal-body">
            {/*Trong trường hợp nhiều trường hơn - độ cao vượt quá trang thì đặt thông số này để xác định độ cao tối đa tự động tạo thanh cuộn: style={{ height: '300px', overflow:'auto'}}*/}
  <form className="form-horizontal">
    <div className="box-body">
      <div className="form-group">
        <label htmlFor="txtCodeview" className="col-sm-3 control-label">Đơn vị cấp trên</label>
        <div className="col-sm-9">
          <input type="text" className="form-control" id="txtParent" ref='txtParent' placeholder="Đơn vị cấp trên" readOnly />
        </div>
      </div>
      <div className="form-group">
        <label htmlFor="txtCodeview" className="col-sm-3 control-label">Mã</label>
        <div className="col-sm-9">
          <input type="text" className="form-control" id="txtCodeview" ref='txtCodeview' placeholder="Mã" />
        </div>
      </div>
      <div className="form-group">
        <label htmlFor="txtName" className="col-sm-3 control-label">Tên</label>
        <div className="col-sm-9">
          <input type="text" className="form-control" id="txtName" ref='txtName' placeholder="Tên" />
        </div>
      </div>
      <div className="form-group">
          <label htmlFor="txtLock" className="col-sm-3 control-label">Không hiển thị</label>
        <div className="col-sm-9">
          <input type="checkbox" id="chkLock" ref='chkLock' />
        </div>
      </div>

      <div className="form-group">
        <label htmlFor="txtBegindate" className="col-sm-3 control-label">Ngày thành lập</label>
        <div className="col-sm-9 date form_date">
          <input type="text" className="form-control" id="txtBegindate" ref='txtBegindate' placeholder="Ngày thành lập" />
          <span className="add-on"><i className="icon-th"></i></span>
        </div>
      </div>
      <div className="form-group">
        <label htmlFor="txtNote" className="col-sm-3 control-label">Ghi chú</label>
        <div className="col-sm-9 ">
          <input type="text" className="form-control" id="txtNote" ref='txtNote' placeholder="Ghi chú" />
        </div>
      </div>
    </div>
      {/*Các nút lệnh ở dưới*/}
  </form>
        </div>
          <div className="box-footer modal-footer">
            <span className="label label-warning" style={{float:'left'}} id="province_popup_status" ref='province_popup_status'>i</span>
                <button type="button" className="btn btn-primary" onClick={this.SaveClick}><i className="fa fa-floppy-o"></i> Ghi</button>
                <button type="button" className="btn btn-primary" onClick={this.SaveContinueClick}><i className="fa fa-plus-circle"></i> Ghi và thêm mới</button>
                <button type="button" className="btn btn-default " data-dismiss="modal"><i className="fa fa-sign-out"></i>Thoát</button>
          </div>
          </div>

    </div>


</div>
            );
    }
});