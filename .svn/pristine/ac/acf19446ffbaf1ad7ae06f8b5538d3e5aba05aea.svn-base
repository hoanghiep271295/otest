var ExamResult = React.createClass({
    getInitialState: function () {
        return {
            listGroupQuesion: [],// list groupcode
            listQuestion: [],/// list question
            listAnswer: [],///list answer follow question
            objHalltudent: null, ///object Hall student
            objExamForm: null, /// Objet Exam Form
            listExamDetail: [], ///list ExamFromdetail
            listAnswerStudent: [], ///list answer of student get from server
            numberQuestion: 0
        }
    },
    componentDidMount: function ()
    {
        this.loadData();
    },
    loadData: function () {
        var defaultvalue = window.getDefaultFromServer();
        var markcode = defaultvalue.markcode;
        var examtimecode = defaultvalue.examtimecode;
        $.ajax({
            url: "/ExamResult/ShowExamResult",
            dataType: 'json',
            data: {
                markcode: markcode,
                examtimecode: examtimecode
            },
            success: function (data) {
                if (data.ret >= 0) {
                    this.setState({
                        listGroupQuesion: data.liQuestiongroup,
                        listQuestion: data.li_question,
                        listAnswer: data.li_answer,
                        objHalltudent: data.ObjexamHallstudent,
                        objExamForm: data.ObjexamForm,
                        listExamDetail: data.liExamformDetail,
                        listAnswerStudent : data.li_examresult,
                        numberQuestion: data.numberQuestion
                    });
                }
            }.bind(this),
            error: function (xhr, status, err) {
                console.log(err.toString());
            }
        });
    },
    render: function () {
        var listQgroup = [];
        var index = 0;
        var that = this;
        this.state.listGroupQuesion.forEach(function (rowitem) {
            index++;
            var type = rowitem._QUESTIONTYPECODE.CODEVIEW;
            switch (type) {
                //1
                case'CO':
                    listQgroup.push(<QuestionGroupCO
                                        key={index}
                                        number={index}
                                        id={rowitem.CODE}
                                        objQuestionGroup={rowitem}
                                        dataQuestion={that.state.listQuestion}
                                        dataAnswer={that.state.listAnswer}
                                        listAnswerStudent= {that.state.listAnswerStudent}
                                        questiontype={"CO"} />);
                          break;
                        //writing
                     //2
              case 'WR':
                 listQgroup.push(<QuestionGroupWR    
                                    key={index}
                                    number={index}
                                    id={rowitem.CODE}
                                    objQuestionGroup={rowitem}
                                    dataQuestion={that.state.listQuestion}
                                    dataAnswer={that.state.listAnswer}
                                    listAnswerStudent= {that.state.listAnswerStudent}
                                    questiontype={"WR"}  />);
                  break;
                  //3
                  //câu hỏi một nhiều chỉ dành cho một câu hỏi cho một nhóm;
                  //Câu hỏi ỏ nhóm, tự động sinh ra một bản ghi câu hỏi giả để lien kết, sau đó có các đáp án. 
                case 'MS':
                 listQgroup.push(<QuestionGroupMS 
                                    key={index}
                                    number={index}
                                    id={rowitem.CODE}
                                    objQuestionGroup={rowitem}
                                    dataQuestion={that.state.listQuestion}
                                    dataAnswer={that.state.listAnswer}
                                    listAnswerStudent= {that.state.listAnswerStudent}
                                    questiontype={"MS"} />);
                    break;
                    //: Viết lại câu; (câu hỏi chính ở nhóm), sau đó câu hỏi chi tiết chính là các từ;
                    //Một câu hỏi có thể có nhiều đáp án đúng 
                    //(để cho phép so sánh chỉ cần đúng một trong các đáp án đó là tính điểm)
                    //4
                case 'RW':
                listQgroup.push(<QuestionGroupRW
                                    key={index}
                                    number={index}
                                    id={rowitem.CODE}
                                    objQuestionGroup={rowitem}
                                    dataQuestion={that.state.listQuestion}
                                    dataAnswer={that.state.listAnswer}
                                    listAnswerStudent= {that.state.listAnswerStudent}
                                    questiontype={"RW"} />);
                    break;
                    //5
                    //dạng kéo thả vào trong đoạn văn
                case 'FI':
                    listQgroup.push(<QuestionGroupFI
                                      key={index}
                                      number={index}
                                      id={rowitem.CODE}
                                      objQuestionGroup={rowitem}
                                      dataQuestion={that.state.listQuestion}
                                      dataAnswer={that.state.listAnswer}
                                      listAnswerStudent= {that.state.listAnswerStudent}
                                      questiontype={"FI"}  />);
                    break;
                    //dạng điền từ vào trong ô trống
                    //6
                case 'FG':
                    console.log("FG chưa làm");
                listQgroup.push(<QuestionGroupFG
                                     key={index}
                                     number={index}
                                     id={rowitem.CODE}
                                     objQuestionGroup={rowitem}
                                     dataQuestion={that.state.listQuestion}
                                     dataAnswer={that.state.listAnswer}
                                     listAnswerStudent= {that.state.listAnswerStudent}
                                     questiontype={"FG"}  />);
                    break;
                    //7
                case 'FF':
                    console.log("FF chưa làm");
                listQgroup.push(<QuestionGroupFF
                                     key={index}
                                     number={index}
                                     id={rowitem.CODE}
                                     objQuestionGroup={rowitem}
                                     dataQuestion={that.state.listQuestion}
                                     dataAnswer={that.state.listAnswer}
                                     listAnswerStudent= {that.state.listAnswerStudent}
                                     questiontype={"FF"} />);
                    break;
                    //8
                    // dạng kéo thả vào 
                case 'PA':
                    console.log("PA chưa làm");
                listQgroup.push(<QuestionGroupPA
                                      key={index}
                                      number={index}
                                      id={rowitem.CODE}
                                      objQuestionGroup={rowitem}
                                      dataQuestion={that.state.listQuestion}
                                      dataAnswer={that.state.listAnswer}
                                      listAnswerStudent= {that.state.listAnswerStudent}
                                      questiontype={"PA"}  />);
                    break;
                    //9
       case 'LA':
                    listQgroup.push(<QuestionGroupLA
                                       key={index}
                                       number={index}
                                       id={rowitem.CODE}
                                       objQuestionGroup={rowitem}
                                       dataQuestion={that.state.listQuestion}
                                       dataAnswer={that.state.listAnswer}
                                       listAnswerStudent= {that.state.listAnswerStudent}
                                       questiontype={"LA"}  />);
                    console.log("LA chưa làm");
                    break;
//10
       case 'MC':
                    listQgroup.push(<QuestionGroupMC 
                                        key={index}
                                        number={index}
                                        id={rowitem.CODE}
                                        objQuestionGroup={rowitem.CONTENT}
                                        dataQuestion={that.state.listQuestion}
                                        dataAnswer={that.state.listAnswer}
                                        listAnswerStudent= {that.state.listAnswerStudent}
                                        questiontype={"MC"}  />);
                    break;
                    //11
     case 'RA':
                    console.log("RA chưa làm");
                    listQgroup.push(<QuestionGroupRA
                                        key={index}
                                        number={index}
                                        id={rowitem.CODE}
                                        objQuestionGroup={rowitem.CONTENT}
                                        dataQuestion={that.state.listQuestion}
                                        dataAnswer={that.state.listAnswer}
                                        listAnswerStudent= {that.state.listAnswerStudent}
                                        questiontype={"RA"}  />);
                    break;
                                                }
         });
        return (
                <div className="examform" >
                        {listQgroup}
                  </div>
            );
       }
});




ReactDOM.render(<ExamResult />, document.getElementById('container'));